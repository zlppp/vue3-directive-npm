declare namespace _default {
    const prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    } & {
        default: string;
    };
    const focusable: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    };
    const multiple: import("vue-types").VueTypeValidableDef<boolean>;
    const visible: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    };
    const activeKey: import("vue-types").VueTypeDef<string | number>;
    const selectedKeys: import("vue-types").VueTypeDef<(string | number)[]>;
    const defaultSelectedKeys: import("vue-types").VueTypeDef<(string | number)[]> & {
        default: () => (string | number)[];
    };
    const defaultOpenKeys: import("vue-types").VueTypeDef<(string | number)[]> & {
        default: () => (string | number)[];
    };
    const openKeys: import("vue-types").VueTypeDef<(string | number)[]>;
    const openAnimation: import("vue-types").VueTypeDef<string | {
        [key: string]: any;
    }>;
    const mode: import("vue-types").VueTypeDef<string> & {
        default: string;
    };
    const triggerSubMenuAction: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    } & {
        default: string;
    };
    const subMenuOpenDelay: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    } & {
        default: number;
    };
    const subMenuCloseDelay: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    } & {
        default: number;
    };
    const level: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    } & {
        default: number;
    };
    const inlineIndent: import("vue-types").VueTypeValidableDef<number> & {
        default: number;
    } & {
        default: number;
    };
    const theme: import("vue-types").VueTypeDef<string> & {
        default: string;
    };
    const getPopupContainer: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    const openTransitionName: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    const forceSubMenuRender: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    };
    const selectable: import("vue-types").VueTypeValidableDef<boolean>;
    const isRootMenu: import("vue-types").VueTypeValidableDef<boolean> & {
        default: boolean;
    };
    const builtinPlacements: import("vue-types").VueTypeValidableDef<{
        [key: string]: any;
    }> & {
        default: () => {
            [key: string]: any;
        };
    } & {
        default: () => {
            [key: string]: any;
        };
    };
    const itemIcon: import("vue-types").VueTypeValidableDef<any>;
    const expandIcon: import("vue-types").VueTypeValidableDef<any>;
    const overflowedIndicator: import("vue-types").VueTypeValidableDef<any>;
    const onClick: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    const onSelect: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    const onDeselect: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
}
export default _default;
