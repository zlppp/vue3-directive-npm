import { ExtractPropTypes } from 'vue';
export declare const timelineProps: {
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    /** 指定最后一个幽灵节点是否存在或内容 */
    pending: import("vue-types").VueTypeValidableDef<any>;
    pendingDot: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    reverse: import("vue-types").VueTypeValidableDef<boolean>;
    mode: import("vue-types").VueTypeDef<"" | "alternate" | "left" | "right">;
};
export declare type TimelineProps = Partial<ExtractPropTypes<typeof timelineProps>>;
declare const _default: import("vue").DefineComponent<{
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    /** 指定最后一个幽灵节点是否存在或内容 */
    pending: import("vue-types").VueTypeValidableDef<any>;
    pendingDot: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    reverse: import("vue-types").VueTypeValidableDef<boolean>;
    mode: import("vue-types").VueTypeDef<"" | "alternate" | "left" | "right">;
}, {
    configProvider: import("../config-provider").ConfigConsumerProps;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    prefixCls: string;
    pendingDot: string;
} & {
    reverse?: boolean;
    mode?: "" | "alternate" | "left" | "right";
    pending?: any;
}>, {
    prefixCls: string;
    pendingDot: string;
}>;
export default _default;
