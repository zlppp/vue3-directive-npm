import { DefineComponent } from 'vue';
declare type PickerType = 'date' | 'week' | 'month';
export default function wrapPicker<P>(Picker: DefineComponent<P>, props: any, pickerType: PickerType): DefineComponent<any, {
    configProvider: import("../config-provider").ConfigConsumerProps;
    picker: any;
    popupRef: any;
}, unknown, {}, {
    savePicker(node: any): void;
    getDefaultLocale(): any;
    savePopupRef(ref: any): void;
    handleOpenChange(open: boolean): void;
    handleFocus(e: FocusEvent): void;
    handleBlur(e: FocusEvent): void;
    handleMouseEnter(e: MouseEvent): void;
    handleMouseLeave(e: MouseEvent): void;
    handleChange(date: any, dateString: string): void;
    handleOk(val: any): void;
    handleCalendarChange(date: any, dateString: string): void;
    focus(): void;
    blur(): void;
    transformValue(props: any): void;
    renderPicker(locale: any, localeCode: string): JSX.Element;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("blur" | "change" | "focus" | "mouseenter" | "mouseleave" | "update:value" | "openChange" | "ok" | "calendarChange")[], "blur" | "change" | "focus" | "mouseenter" | "mouseleave" | "update:value" | "openChange" | "ok" | "calendarChange", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    [x: string]: any;
} | ({
    [x: string]: any;
} & {
    [x: number]: any;
})>, {} | {
    [x: string]: any;
}>;
export {};
