declare const _default: import("vue").DefineComponent<{
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    href: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    separator: import("vue-types").VueTypeValidableDef<import("../_util/type").VueNode> & {
        default: string | number | boolean | (() => void) | (() => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
            [key: string]: any;
        }>) | (() => import("vue").VNodeArrayChildren) | (() => JSX.Element);
    };
    overlay: import("vue-types").VueTypeValidableDef<import("../_util/type").VueNode>;
}, {
    configProvider: import("../config-provider").ConfigConsumerProps;
}, unknown, {}, {
    /**
     * if overlay is have
     * Wrap a DropDown
     */
    renderBreadcrumbNode(breadcrumbItem: JSX.Element, prefixCls: string): JSX.Element;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    prefixCls: string;
    separator: import("../_util/type").VueNode;
    href: string;
} & {
    overlay?: import("../_util/type").VueNode;
}>, {
    prefixCls: string;
    separator: import("../_util/type").VueNode;
    href: string;
}>;
export default _default;
