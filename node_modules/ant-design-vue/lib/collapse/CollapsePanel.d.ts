declare const _default: import("vue").DefineComponent<{
    openAnimation: import("vue-types").VueTypeValidableDef<{
        [key: string]: any;
    }> & {
        default: () => {
            [key: string]: any;
        };
    };
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    header: import("vue-types").VueTypeValidableDef<import("../_util/type").VueNode>;
    headerClass: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    showArrow: import("vue-types").VueTypeValidableDef<boolean>;
    isActive: import("vue-types").VueTypeValidableDef<boolean>;
    destroyInactivePanel: import("vue-types").VueTypeValidableDef<boolean>;
    disabled: import("vue-types").VueTypeValidableDef<boolean>;
    accordion: import("vue-types").VueTypeValidableDef<boolean>;
    forceRender: import("vue-types").VueTypeValidableDef<boolean>;
    expandIcon: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
    extra: import("vue-types").VueTypeValidableDef<import("../_util/type").VueNode>;
    panelKey: import("vue-types").VueTypeValidableDef<import("../_util/type").VueNode>;
}, {
    configProvider: import("../config-provider").ConfigConsumerProps;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    prefixCls: string;
    expandIcon: (...args: any[]) => any;
    openAnimation: {
        [key: string]: any;
    };
    headerClass: string;
} & {
    header?: import("../_util/type").VueNode;
    disabled?: boolean;
    forceRender?: boolean;
    showArrow?: boolean;
    extra?: import("../_util/type").VueNode;
    accordion?: boolean;
    destroyInactivePanel?: boolean;
    isActive?: boolean;
    panelKey?: import("../_util/type").VueNode;
}>, {
    prefixCls: string;
    expandIcon: (...args: any[]) => any;
    openAnimation: {
        [key: string]: any;
    };
    headerClass: string;
}>;
export default _default;
