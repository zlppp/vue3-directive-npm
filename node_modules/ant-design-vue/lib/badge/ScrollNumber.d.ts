declare const _default: import("vue").DefineComponent<{
    prefixCls: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    count: import("vue-types").VueTypeValidableDef<any>;
    component: import("vue-types").VueTypeValidableDef<string> & {
        default: string;
    };
    title: import("vue-types").VueTypeDef<string | number>;
    displayComponent: import("vue-types").VueTypeValidableDef<any>;
    onAnimated: import("vue-types").VueTypeValidableDef<(...args: any[]) => any> & {
        default: (...args: any[]) => any;
    };
}, {
    configProvider: import("../config-provider").ConfigConsumerProps;
    lastCount: any;
    timeout: any;
}, {
    animateStarted: boolean;
    sCount: any;
}, {}, {
    clearTimeout(): void;
    getPositionByNum(num: number, i: number): number;
    handleAnimated(): void;
    renderNumberList(position: number, className: string): any[];
    renderCurrentNumber(prefixCls: string, num: number | string, i: number): JSX.Element;
    renderNumberElement(prefixCls: string): any;
}, {
    methods: {
        setState(state: {}, callback: any): void;
        __emit(...args: any[]): void;
    };
}, import("vue").ComponentOptionsMixin, "animated"[], "animated", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    prefixCls: string;
    component: string;
    onAnimated: (...args: any[]) => any;
} & {
    title?: string | number;
    count?: any;
    displayComponent?: any;
}>, {
    prefixCls: string;
    component: string;
    onAnimated: (...args: any[]) => any;
}>;
export default _default;
